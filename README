# FastAPI Project Setup

## 📂 Project Structure
```
project-name/
├── app/
│   ├── crud/
│   │   └── user.py
│   ├── db/
│   │   └── session.py
│   ├── models/
│   │   └── user.py
│   ├── schemas/
│   │   └── user.py
│   └── main.py
├── alembic/
├── requirements.txt
└── README.md
```

## ⚙️ Installation Instructions

### 1. **Create Virtual Environment**
```bash
python -m venv venv
```

### 2. **Activate Virtual Environment**
- **Windows**:
```bash
venv\Scripts\activate
```
- **Linux/macOS**:
```bash
source venv/bin/activate
```

### 3. **Install Required Packages**

For PostgreSQL:
```bash
pip install fastapi uvicorn sqlalchemy passlib[bcrypt] python-multipart email-validator alembic asyncpg
```

For MySQL:
```bash
pip install fastapi uvicorn sqlalchemy passlib[bcrypt] python-multipart email-validator alembic pymysql
```

### 4. **Save Dependencies**
```bash
pip freeze > requirements.txt
```

### 5. **Start the FastAPI Server**
```bash
uvicorn app.main:app --reload
```

## 📄 API Endpoints

### 1. **Sign Up User**
- **POST** `/signUp/`
- **Body**:
```json
{
    "name": "John Doe",
    "email": "john@example.com",
    "password": "Password123!",
    "phone_number": "1234567890",
    "address": "123 Main Street"
}
```

### 2. **Login User**
- **POST** `/login/`
- **Body**:
```json
{
    "email": "john@example.com",
    "password": "Password123!"
}
```

### 3. **Get User by ID**
- **GET** `/users/{user_id}`

## 🛠️ Alembic Database Migration

### 1. **Initialize Alembic**
```bash
alembic init alembic
```

### 2. **Edit Alembic `env.py`**
Update the `SQLALCHEMY_DATABASE_URL` to match your database connection.

### 3. **Generate a New Migration**
```bash
alembic revision --autogenerate -m "Initial migration"
```

### 4. **Apply Migration**
```bash
alembic upgrade head
```

## ⚠️ Common Issues

1. **Pydantic Warning**:
   - If you encounter this warning:
     > `Valid config keys have changed in V2: 'orm_mode' has been renamed to 'from_attributes'`
   - Update your Pydantic model config:
```python
class Config:
    from_attributes = True
```

2. **CORS Error**:
   - Install and enable CORS in FastAPI:
```bash
pip install fastapi[all]
```
```python
from fastapi.middleware.cors import CORSMiddleware

app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)
```

## ✅ Testing the API

Use tools like [Postman](https://www.postman.com/) or [cURL](https://curl.se/) to test API endpoints.

Example cURL Command:
```bash
curl -X POST "http://localhost:8000/login/" -H "Content-Type: application/json" -d '{"email": "user@example.com", "password": "Password123!"}'
```

## 🚀 Deployment

To deploy using Uvicorn with Gunicorn:
```bash
pip install gunicorn
uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers 4
```

---

This guide will help you set up, develop, and deploy your FastAPI project. Happy coding! 🚀

